Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-09-11T23:31:42+08:00

====== 2 ======
Created Monday 11 September 2017

笔者对NGINX的理会：
一般来说nginx 配置文件里对优化比較有作用的为下面几项：

1. worker_processes 8;

nginx 进程数，建议依照cpu 数目来指定，一般为它的倍数 (如,2个四核的cpu计为8)。

2. worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;

为每一个进程分配cpu，上例中将8 个进程分配到8 个cpu。当然能够写多个，或者将一
个进程分配到多个cpu。

3. worker_rlimit_nofile 65535;

这个指令是指当一个nginx 进程打开的最多文件描写叙述符数目，理论值应该是最多打开文
件数（ulimit -n）与nginx 进程数相除，可是nginx 分配请求并非那么均匀。所以最好与ulimit -n 的值保持一致。

如今在linux 2.6内核下开启文件打开数为65535，worker_rlimit_nofile就对应应该填写65535。

这是由于nginx调度时分配请求到进程并非那么的均衡。所以假如填写10240，总并发量达到3-4万时就有进程可能超过10240了。这时会返回502错误。

查看linux系统文件描写叙述符的方法：

[root@web001 ~]# sysctl -a | grep fs.file

fs.file-max = 789972

fs.file-nr = 510 0 789972

4. use epoll;
使用epoll 的I/O 模型

(

补充说明:

与apache相类，nginx针对不同的操作系统。有不同的事件模型

	  A）标准事件模型
	   Select、poll属于标准事件模型。假设当前系统不存在更有效的方法，nginx会选择select或poll
	  B）高效事件模型   
Kqueue：使用于 FreeBSD 4.1+, OpenBSD 2.9+, NetBSD 2.0 和 MacOS X. 使用双处理器的MacOS X系统使用kqueue可能会造成内核崩溃。


Epoll: 使用于Linux内核2.6版本号及以后的系统。

/dev/poll：使用于 Solaris 7 11/99+, HP/UX 11.22+ (eventport), IRIX 6.5.15+ 和 Tru64 UNIX 5.1A+。

		Eventport：使用于 Solaris 10. 为了防止出现内核崩溃的问题， 有必要安装安全补丁。

)

5. worker_connections 65535;

每一个进程同意的最多连接数， 理论上每台nginx server的最大连接数为worker_processes*worker_connections。

6. keepalive_timeout 60;

keepalive 超时时间。

7. client_header_buffer_size 4k;

client请求头部的缓冲区大小，这个能够依据你的系统分页大小来设置，一般一个请求头的大小不会超过1k，只是因为一般系统分页都要大于1k。所以这里设置为分页大小。 

分页大小能够用命令getconf PAGESIZE 取得。

[root@web001 ~]# getconf PAGESIZE 

4096

但也有client_header_buffer_size超过4k的情况，可是client_header_buffer_size该值必须设置为“系统分页大小”的整倍数。

8. open_file_cache max=65535 inactive=60s;

这个将为打开文件指定缓存，默认是没有启用的。max 指定缓存数量。建议和打开文件数一致。inactive 是指经过多长时间文件没被请求后删除缓存。

9. open_file_cache_valid 80s;

这个是指多长时间检查一次缓存的有效信息。

10. open_file_cache_min_uses 1;

open_file_cache 指令中的inactive 參数时间内文件的最少使用次数，假设超过这个数字，文件描写叙述符一直是在缓存中打开的。如上例，假设有一个文件在inactive 时间内一次没被使用，它将被移除。


測试NGINX 是否支持 GZIP  命令行检測例如以下（替换成自己的地址，本地可直接输入本地IP就可以）：

curl -I -H "Accept-Encoding: gzip, deflate"  "http://www.baidu.com"  //測试页面

curl -I -H "Accept-Encoding: gzip, deflate"  "http://www.baidu.com/xxx.gif"  //測试图片
curl -I -H "Accept-Encoding: gzip, deflate"  "http://www.baidu.com/xxx.js"   //測试JS文件

curl -I -H "Accept-Encoding: gzip, deflate"  "http://www.baidu.com/xxx.css"  //測试CSS
